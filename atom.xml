<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>来呀，不服抓个包~~</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wangjibao.com.cn/"/>
  <updated>2018-09-28T16:50:29.613Z</updated>
  <id>http://wangjibao.com.cn/</id>
  
  <author>
    <name>大宝哥spring</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode</title>
    <link href="http://wangjibao.com.cn/2018/09/28/LeetCode/"/>
    <id>http://wangjibao.com.cn/2018/09/28/LeetCode/</id>
    <published>2018-09-28T13:06:07.000Z</published>
    <updated>2018-09-28T16:50:29.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a><a href="https://leetcode-cn.com/problems/two-sum" target="_blank" rel="noopener">两数之和</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; twoSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Map;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;nums.size(); i++)</span><br><span class="line">            Map[nums[i]] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;nums.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> tmp = target - nums[i];</span><br><span class="line">            <span class="keyword">if</span>( Map.count(tmp) &amp;&amp; Map[tmp]!=i )&#123;</span><br><span class="line">                ans.push_back(i);</span><br><span class="line">                ans.push_back(Map[tmp]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="两数相加"><a href="#两数相加" class="headerlink" title="两数相加"></a><a href="https://leetcode-cn.com/problems/add-two-numbers" target="_blank" rel="noopener">两数相加</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        ListNode* res = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode* tmp = res;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( l1 || l2 )&#123;</span><br><span class="line">            <span class="keyword">if</span>( l1 )&#123;</span><br><span class="line">                sum += l1-&gt;val;</span><br><span class="line">                l1 = l1-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>( l2 )&#123;</span><br><span class="line">                sum += l2-&gt;val;</span><br><span class="line">                l2 = l2-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp-&gt;next = <span class="keyword">new</span> ListNode(sum%<span class="number">10</span>);</span><br><span class="line">            tmp = tmp-&gt;next;</span><br><span class="line">            sum /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( sum )</span><br><span class="line">            tmp-&gt;next = <span class="keyword">new</span> ListNode(sum);</span><br><span class="line">        <span class="keyword">return</span> res-&gt;next;  <span class="comment">//解决的很是巧妙</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="无重复字符的最长子串"><a href="#无重复字符的最长子串" class="headerlink" title="无重复字符的最长子串"></a><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters" target="_blank" rel="noopener">无重复字符的最长子串</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line">        <span class="keyword">for</span>( i=<span class="number">0</span>,j=<span class="number">0</span>; j&lt;s.length(); j++ )&#123;</span><br><span class="line">            <span class="keyword">if</span>( mp.count(s[j]) == <span class="number">0</span> )&#123;  <span class="comment">//map中之前不含有此元素</span></span><br><span class="line">                mp.insert(make_pair( s[j], j ));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;  <span class="comment">//map中之前含有此元素</span></span><br><span class="line">                ans = max( ans, j-i );</span><br><span class="line">                i = max( mp[s[j]]+<span class="number">1</span>, i );</span><br><span class="line">                mp[s[j]] = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = max( ans, j-i ); <span class="comment">//到字符串的结尾了，需要处理</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="两个排序数组的中位数"><a href="#两个排序数组的中位数" class="headerlink" title="两个排序数组的中位数"></a><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays" target="_blank" rel="noopener">两个排序数组的中位数</a></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> totalLength = nums1.size() + nums2.size();</span><br><span class="line">        <span class="keyword">if</span>( totalLength&amp;<span class="number">1</span> )</span><br><span class="line">            <span class="keyword">return</span> findKth( nums1.begin(), nums1.size(), nums2.begin(), nums2.size(), (totalLength&gt;&gt;<span class="number">1</span>)+<span class="number">1</span> );</span><br><span class="line">        <span class="keyword">else</span> <span class="comment">//除以 2.0 是为了保留小数点</span></span><br><span class="line">            <span class="keyword">return</span> (findKth( nums1.begin(), nums1.size(), nums2.begin(), nums2.size(), (totalLength&gt;&gt;<span class="number">1</span>) ) + findKth( nums1.begin(), nums1.size(), nums2.begin(), nums2.size(), (totalLength&gt;&gt;<span class="number">1</span>)+<span class="number">1</span> ))/<span class="number">2.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findKth</span><span class="params">( <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;:: iterator nums1, <span class="keyword">int</span> len1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;:: iterator nums2, <span class="keyword">int</span> len2, <span class="keyword">int</span> k )</span></span>&#123;</span><br><span class="line">        <span class="comment">// 默认 len1 要大于 len2</span></span><br><span class="line">        <span class="keyword">if</span>( len1&lt;len2 )</span><br><span class="line">            <span class="keyword">return</span> findKth( nums2, len2, nums1, len1, k );</span><br><span class="line">        <span class="keyword">if</span>( len2==<span class="number">0</span> )</span><br><span class="line">            <span class="keyword">return</span> nums1[k<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>( k==<span class="number">1</span> )  <span class="comment">//k==1做特判，因为后期要移位, 不做特判point-1会出现负值</span></span><br><span class="line">            <span class="keyword">return</span> min( nums1[<span class="number">0</span>], nums2[<span class="number">0</span>] );</span><br><span class="line">        <span class="keyword">int</span> point2 = min( k&gt;&gt;<span class="number">1</span>, len2 );</span><br><span class="line">        <span class="keyword">int</span> point1 = k - point2;</span><br><span class="line">        <span class="comment">//下面对 nums1[point1-1] 和 nums2[point2-1]的大小关系进行讨论</span></span><br><span class="line">        <span class="keyword">if</span>( nums1[point1<span class="number">-1</span>] &gt; nums2[point2<span class="number">-1</span>] )</span><br><span class="line">            <span class="keyword">return</span> findKth( nums1, point1, nums2+point2, len2-point2, k-point2 );</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>( nums1[point1<span class="number">-1</span>] &lt; nums2[point2<span class="number">-1</span>] )</span><br><span class="line">            <span class="keyword">return</span> findKth( nums1+point1, len1-point1, nums2, point2, k-point1 );</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> nums1[point1<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="最长回文子串"><a href="#最长回文子串" class="headerlink" title="最长回文子串"></a><a href="https://leetcode-cn.com/problems/longest-palindromic-substring" target="_blank" rel="noopener">最长回文子串</a></h2><p><a href="https://segmentfault.com/a/1190000003914228" target="_blank" rel="noopener">Manacher</a>算法，国内也叫“马拉车”。虽然 <code>RL[i]=min(RL[2*pos-i], MaxRight-i)</code>，但是位于 i  半径右边界与 MaxRight之间的元素是不会被重复遍历的，否则会与 i 的对称 j  起冲突，也正因为如此，算法的复杂度是 O(n)。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> newString = <span class="string">"#"</span>;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.length(); i++ )&#123;</span><br><span class="line">            newString += s[i];</span><br><span class="line">            newString += <span class="string">"#"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> maxLen = <span class="number">0</span>, maxLenIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> maxRight=<span class="number">0</span>, pos=<span class="number">0</span>; <span class="comment">//代表当前最右及其对应中心元的位置</span></span><br><span class="line">        <span class="keyword">int</span> radius[newString.length()];</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">0</span>; i&lt;newString.length(); i++ )&#123;</span><br><span class="line">            <span class="keyword">if</span>( i&lt;maxRight )</span><br><span class="line">                radius[i] = min( radius[<span class="number">2</span>*pos-i], maxRight-i+<span class="number">1</span> ); <span class="comment">//注意这里的 +1</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                radius[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>( (i+radius[i])&lt;newString.length() &amp;&amp; (i-radius[i])&gt;=<span class="number">0</span> &amp;&amp; newString[i+radius[i]]==newString[i-radius[i]] )&#123; <span class="comment">// i+radius[i]-1为当前所到位置</span></span><br><span class="line">                radius[i] += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//更新 maxRight 和 pos</span></span><br><span class="line">            <span class="keyword">if</span>( (i+radius[i]<span class="number">-1</span>)&gt;maxRight )&#123;</span><br><span class="line">                maxRight = i+radius[i]<span class="number">-1</span>;</span><br><span class="line">                pos = i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>( maxLen&lt;radius[i] )&#123;</span><br><span class="line">                maxLen = radius[i];</span><br><span class="line">                maxLenIndex = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">string</span> ansString = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i=maxLenIndex-radius[maxLenIndex]+<span class="number">1</span>; i&lt;maxLenIndex+radius[maxLenIndex]<span class="number">-1</span>; i++ )&#123;</span><br><span class="line">            <span class="keyword">if</span>( newString[i]!=<span class="string">'#'</span> )</span><br><span class="line">                ansString += newString[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ansString;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;两数之和&quot;&gt;&lt;a href=&quot;#两数之和&quot; class=&quot;headerlink&quot; title=&quot;两数之和&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/two-sum&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;两数之和&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; twoSum(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;unordered_map&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; Map;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;nums.size(); i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Map[nums[i]] = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;nums.size(); i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; tmp = target - nums[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;( Map.count(tmp) &amp;amp;&amp;amp; Map[tmp]!=i )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ans.push_back(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ans.push_back(Map[tmp]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;两数相加&quot;&gt;&lt;a href=&quot;#两数相加&quot; class=&quot;headerlink&quot; title=&quot;两数相加&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/add-two-numbers&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;两数相加&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Definition for singly-linked list.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * struct ListNode &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; *     int val;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; *     ListNode *next;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; *     ListNode(int x) : val(x), next(NULL) &amp;#123;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;ListNode* &lt;span class=&quot;title&quot;&gt;addTwoNumbers&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ListNode* l1, ListNode* l2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListNode* res = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ListNode(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListNode* tmp = res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;( l1 || l2 )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;( l1 )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum += l1-&amp;gt;val;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l1 = l1-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;( l2 )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum += l2-&amp;gt;val;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l2 = l2-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp-&amp;gt;next = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ListNode(sum%&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp = tmp-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sum /= &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;( sum )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp-&amp;gt;next = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ListNode(sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res-&amp;gt;next;  &lt;span class=&quot;comment&quot;&gt;//解决的很是巧妙&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="算法" scheme="http://wangjibao.com.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="algorithm" scheme="http://wangjibao.com.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Pages+Hexo+Next博客搭建记录</title>
    <link href="http://wangjibao.com.cn/2018/09/22/GitHub-Pages-Hexo-Next%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <id>http://wangjibao.com.cn/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/</id>
    <published>2018-09-22T13:43:58.000Z</published>
    <updated>2018-09-25T11:44:00.516Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>　　大二的时候看见学长搭建的个人博客，感觉好高大上的样子，想着自己啥时候不再是哪个只会喊：<strong>哇、牛批、666、厉害厉害</strong>的傻逼选手，然后浪啊浪，突然有一天，CSP考试上考到了一个Markdown转HTML的大模拟题：<br><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/CSP.png" alt="计算机软件能力认证考试系统">现场狂写2小时，黑箱测试最后只得20分，从此心理对MD留下了挥之不去的阴影，然后就没有了然后，此事不来了了之。大二的时候在<a href="https://blog.csdn.net/spring371327" target="_blank" rel="noopener">CSDN</a>上写过，但是感觉CSDN的广告是越来也严重了，上面，下面，左面，右面等等四面八方全是各种广告，于是乎，时隔三年，趁着中秋没钱出去浪啊，舍友也回家了，丧尸宿舍也搭建一个简单的个人博客吧，此文简单记录一下搭建过程。<br>本文使用的是 <a href="https://pages.github.com/" target="_blank" rel="noopener">Github pages</a> + <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> + <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next </a>主题。      </p><a id="more"></a><h2 id="基础环境搭建"><a href="#基础环境搭建" class="headerlink" title="基础环境搭建"></a>基础环境搭建</h2><h3 id="注册GitHub账号并创建IO仓库"><a href="#注册GitHub账号并创建IO仓库" class="headerlink" title="注册GitHub账号并创建IO仓库"></a>注册GitHub账号并创建IO仓库</h3><p>　　<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>作为全球最大的同性交友网站，在程序员心中的地位不亚与<del>PornHub</del>在宅男心中的地位，有过之而无不及啊，登录官网填写相关信息进行账号注册，然后创建一个和注册名相同的仓库(Repository)，注意一定要是下图这种格式<em>[username.github.io]</em>，因为github page每个账号只有一个。  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/repo.png" alt="Create New Repository"></p><p>　　现在，已经可以通过<a href="https://wangjibao.github.io/" target="_blank" rel="noopener">https://wangjibao.github.io/</a>来访问了，后面还会在这上面做更多的设置。</p><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p>　　Hexo是基于Node.js的，其实Node.js就是一个JavaScript的运行环境，用来生成我们所写的静态博客页面，去<a href="https://nodejs.org/en/" target="_blank" rel="noopener">官网</a>下载安装即可，并且会自动加入系统环境变量中。  　<br>　　其中的 <a href="https://www.npmjs.com.cn/" target="_blank" rel="noopener">npm</a>(Node Package Manager) 是随 node.js 一起安装的包管理工具，能解决NodeJS代码部署上的很多问题。常用命令如下:  </p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install npm -g              #安装新版本的npm</span><br><span class="line">npm install                     #安装npm依赖包</span><br><span class="line">npm install &lt;Mouble Name&gt;       #安装包，分为全局安装和本地安装，全局安装添加 -g 参数</span><br><span class="line">npm uninstall &lt;Mouble Name&gt;     #卸载包</span><br><span class="line">npm update &lt;Mouble Name&gt;        #更新包</span><br><span class="line">npm list -g                     #列出所有的全局安装包</span><br></pre></td></tr></table></figure><h3 id="安装Git并配置SSH-Key"><a href="#安装Git并配置SSH-Key" class="headerlink" title="安装Ｇit并配置SSH Key"></a>安装Ｇit并配置SSH Key</h3><p>   Git是一个流行的版本控制工具，使用它和GitHub进行交互。前往Git<a href="https://git-scm.com/" target="_blank" rel="noopener">官网</a>下载安装到本地即可。  因为你要提交代码到GitHub必须得拥有权限，但是直接使用用户名+密码不安全，所以使用 SSH Key来解决本地和服务器的连接问题。  </p><p>   在Git Bash中执行：  <code>cd ~/.ssh</code>      ，检查本机存在的ssh秘钥。如果提示： <code>No such file or directory</code> 说明你是第一次使用git。</p><p>  <code>ssh-keygen -t rsa -C &quot;17600****26@163.com&quot;</code></p><p>  按照提示操作，最终会在用户目录下生成一个<code>id_rsa.pub</code>文件，这就是自己的公钥。复制里面的字符串到自己的GitHub中，<code>settings &gt;&gt; SSH and GPG keys &gt;&gt; New SSH Key</code>。</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/ssh_key.png" alt="添加SSH Key"></p><p>执行如下命令，测试是否添加成功：</p><pre><code>`ssh -T git@github.com`</code></pre><p>同时在git bash中进行如下配置: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;wangjibao&quot;                 #github用户名</span><br><span class="line">git config --global user.email &quot;17600****26@163.com       #github注册邮箱</span><br></pre></td></tr></table></figure><h3 id="安装sublime"><a href="#安装sublime" class="headerlink" title="安装sublime"></a>安装sublime</h3><p>　　Sublime Text3，很方便快捷的代码编辑器，后期的很多文件修改编辑操作要借助此工具进行。<a href="https://www.sublimetext.com/" target="_blank" rel="noopener">官网</a>下载安装的软件本身是付费的，但我大天朝能用付费的软件，呵，开玩笑！百度一发好多激活码直接用。</p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>　　在某个目录下建一个文件夹，此文件夹作为hexo的工作区。在该文件夹中 <code>Git Bash Here</code>，执行如下命令安装hexo：<br>　　　<code>npm install -g hexo</code></p><p>   安装完成后，<code>hexo -v</code> 查看安装版本及是否安装成功。执行 <code>hexo init</code>，对此工作文件夹进行初始化<strong>（特别注意，此文件夹初始必须是空的，否则会报错）</strong>。完成后，将生成如下目录结构的文件树   </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/file_tree.png" alt="文件目录树"></p><p>　　其中<code>_config.yml</code>是全局配置文件，<code>_posts</code>是放置博客文章的文件夹，具体各文件功能查看<a href="https://www.jekyll.com.cn/docs/structure/" target="_blank" rel="noopener">这里</a>。此时，我们执行  <code>hexo server</code>来启动Hexo服务，在浏览器中输入 <code>http://localhost:4000</code>查看初始效果。<img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/localhost4000.png" alt="Hexo初始效果"></p><p>  常用的 Hexo命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo -v              #查看版本信息</span><br><span class="line">hexo new &quot;tilte&quot;     #创建新文章，放在\source\_posts目录下</span><br><span class="line">hexo new page ***    #创建页面</span><br><span class="line">hexo generate        #用来生成静态文件，简写： hexo g</span><br><span class="line">hexo server          #开启服务器实现本地预览功能，简写：  hexo s</span><br><span class="line">hexo deploy          #部署网址，上传到github仓库，简写：  hexo d</span><br><span class="line">hexo clean           #清除缓存(db.json)和已生成的静态文件(public),例如在更换博客主题后执行该命令</span><br></pre></td></tr></table></figure><h3 id="域名购买及解析"><a href="#域名购买及解析" class="headerlink" title="域名购买及解析"></a>域名购买及解析</h3><p>　　前往<a href="https://www.aliyun.com/?utm_content=se_1000301881" target="_blank" rel="noopener">阿里云</a>购买属于自己的域名，当然，不买也是可以的，直接使用 <code>wangjibao.github.io</code>也能访问博客，只是为了博客更加个性化一点，遂购买一个属于自己的域名。购买完成后，前往域名解析页面设置域名解析，如下图：   </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/dns.png" alt="域名解析"></p><p>　　其中第二行的IP地址是在<code>cmd</code>命令框中通过 <code>ping wangjibao.github.io</code> 命令得到。同时，在github pages的设置页面，填写购买的域名。   </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/domain.png" alt="配置域名"></p><p>最后，在<code>source</code>文件夹中新建名为 <code>CNAME</code>的文件，在文件中填入<code>www.wangjibao.com.cn</code>；执行 <code>hexo g -d</code>命令，此时，即可通过在浏览器中的地址栏输入 <code>www.wangjibao.com.cn</code> 进行博客的浏览。</p><h3 id="本地与Github连接"><a href="#本地与Github连接" class="headerlink" title="本地与Github连接"></a>本地与Github连接</h3><p>　　之前已经配置好了SSH Key，此时只要修改一下<code>_config.yml</code>文件即可轻松实现本地博文发布。修改<code>_config.yml</code>如下：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/deploy.png" alt="deploy配置"></p><p>　其中<code>repository</code>的值在下图中获得，注意，此处每个字段的冒号后面都跟有一个空格，否则会出错。</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/git_address.png" alt="git_address"></p><p>　在发布博文前，执行如下命令安装必要的插件：</p><p>　　　<code>npm install hexo-deployer-git --save</code></p><h3 id="配置NexT主题"><a href="#配置NexT主题" class="headerlink" title="配置NexT主题"></a>配置NexT主题</h3><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT</a>的官方说明文档，将各基础配置讲述得非常清楚，按照官方文档一步一步配置即可。包括：</p><ul><li><p>安装NexT </p><ul><li>下载主题</li><li>启用主题</li><li>验证主题  </li></ul></li><li><p>主题设定  </p><ul><li>选择Scheme（此处选用Gemini主题）</li><li>设置语言（zh-Hans）</li><li>设置菜单</li><li>设置侧栏</li><li>设置头像</li><li>设置作者昵称</li><li>设置站点描述</li></ul></li><li><p>设置RSS（<code>hexo install hexo-generator-feed --save</code>）</p></li><li><p>添加标签页面</p></li><li><p>添加分类页面</p></li><li><p>设置字体</p></li><li><p>设置代码高亮主题（<code>night eighties</code>）</p></li><li><p>侧边栏社交链接</p></li><li><p>开启打赏功能</p></li><li><p>设置友情链接</p></li><li><p>腾讯公益404页面  </p><p>此处官网提供的是 <code>http</code>模式的404页面，在<code>https</code>模式下蹦出的404页面会出现排版问题，如<code>firefox</code>会报 <code>Mixed Active Content</code>警告，如图：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/404warning.png" alt="404warning"></p><p>两种解决方案，一种是关掉浏览器对此站点的保护功能，但却不是很实用，因为你不能要求所有人解除对你站点的保护。  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/404prevent.png" alt="解除浏览器的保护"></p><p>第二种解决方案是，将官网提供的404页面的代码做一下修改，具体如下：   </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js"</span> <span class="attr">homePageName</span>=<span class="string">"返回主页"</span> <span class="attr">homePageUrl</span>=<span class="string">"https://ymwangzhuan.com"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，改版后的404页面的<code>src</code>字段并没有指明使用的是<code>http</code>协议还是<code>https</code>协议，会自动根据你的站点做适配，问题完美解决[<em>注意将404.html放到站点根目录的<code>source</code>文件夹中</em>]。</p></li><li><p>站点建立时间</p></li><li><p>订阅微信公众号</p></li><li><p>设置背景动画     </p></li></ul><h2 id="NexT主题个性化设计"><a href="#NexT主题个性化设计" class="headerlink" title="NexT主题个性化设计"></a>NexT主题个性化设计</h2><h3 id="设置网站图标-Favicon"><a href="#设置网站图标-Favicon" class="headerlink" title="设置网站图标 Favicon"></a>设置网站图标 <code>Favicon</code></h3><p>在网上找一张32*32大小的 <code>ico</code> 图标，当然，不是 <code>ico</code> 格式也是可以的，如 <code>png</code> 等。将图标放到目录 <code>\thems\next\source\imges</code> 文件夹中，然后修改主题配置文件即可，操作如下图：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/facion.png" alt="网站图标"></p><p>作为抓包组中的一员，搭建的博客必须上 <code>wireshark</code> 图标啊，皮一波~~，效果如下图：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/facion_top.png" alt="facion图像展示"></p><h3 id="修改文章底部-号标签样式"><a href="#修改文章底部-号标签样式" class="headerlink" title="修改文章底部 # 号标签样式"></a>修改文章底部 <code>#</code> 号标签样式</h3><p>在 <code>\themes\next\layout\_macro\post.swing</code> 文件中搜索 <code>rel=&quot;tag&quot;&gt;#</code> ，将 <code>#</code> 号替换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code>，如下图：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/foot_tag.png" alt="footer_tag"></p><h3 id="文章末尾添加-本文结束-标记"><a href="#文章末尾添加-本文结束-标记" class="headerlink" title="文章末尾添加 本文结束 标记"></a>文章末尾添加 <code>本文结束</code> 标记</h3><p>添加<code>本文结束</code>标记的步骤，其实也是主题编写的基本步骤，主要分3步：</p><ol><li><p><strong>添加模板文件</strong> </p><p>在目录 <code>themes\next\layout\_macro</code>中新建名为 <code>passage-end-tag.swig</code>的文件，并添加如下代码：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> </span><br><span class="line">    &#123;% if not is_index %&#125; </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span></span><br><span class="line">            -------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-paw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读------------</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>导入模板文件</strong><br>  在文件 <code>themes\next\layout\_macro\post.swig</code>中找到如下代码块（第332行）:</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;#####################&#125;</span><br><span class="line">&#123;### END POST BODY ###&#125;</span><br><span class="line">&#123;#####################&#125;</span><br></pre></td></tr></table></figure><p>  在此代码块的上面添加如下代码：  </p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">          &#123;% include 'passage-end-tag.swig' %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>配置</strong>  </p><p>  在<strong>主题配置文件</strong>中添加 <code>passage-end-tag</code> 字段，并设置为 <code>true</code> ：  </p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure></li></ol><p>最终效果为：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/end_presQ.png" alt="博文结束标记"></p><h3 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h3><p>在next主题的配置文件 <code>_config.yml</code> 中搜索关键词 <code>pace</code> ，设置为 <code>true</code> ，还可以设置加载条的样式，修改如下图所示：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/pace.png" alt="加载进度条"></p><h3 id="隐藏网站底部-由hexo强力驱动"><a href="#隐藏网站底部-由hexo强力驱动" class="headerlink" title="隐藏网站底部 由hexo强力驱动"></a>隐藏网站底部 <code>由hexo强力驱动</code></h3><p><strong>方案一：</strong>在目录 <code>themes\next\layout\_partials\</code>中打开 <code>footer.swig</code>文件，将对应网站底部的描述部分给注释掉即可，<code>html</code>的注释符 <code>&lt;!--  ****  --&gt;</code>：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/hide_footer.png" alt="注释网站底部代码"> </p><p><strong>方案二：</strong>在主题配置文件中，配置 <code>powred</code>字段和<code>theme</code>字段，将其用 <code>#</code>号注释掉：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/hide_footer2.png" alt="隐藏网站底部信息"></p><p>两者都能实现下图所示的效果：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/hide_footer_press.png" alt="注释网站底部信息效果图"></p><h3 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h3><p>使用 <code>top</code> 属性， <code>top</code> 值<strong>越大</strong>，排序就<strong>越靠前</strong>，如果文章不设置 <code>top</code> 属性，就按照博文的推送时间排序。如果使用的next主题在5.1之后，会自带此功能，修改<strong>站点配置文件</strong>中的 <code>order_by</code>字段即可；如果使用的是更老的版本，修改<code>node_modules\hexo-generator-index\lib\generator.js</code>中的内容即可，在<code>var posts =</code>那一行的后面添加如下博文排序函数：  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">        <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这里我们使用第二种方案，每次写文章的时候，都要手动添加 <code>top</code> 属性，很麻烦，这里，我们可以修改 <code>scaffolds\post.md</code> 文件，修改后的内容如下，其实相当于创建了一个博文的初始模板。  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/template.png" alt="新建博文模板"></p><p>到此，如果文章设置了 <code>top</code> 属性并有值得话，根据 <code>top</code> 值排序，没有的话，按照博文的推送时间排序。</p><h3 id="添加分享"><a href="#添加分享" class="headerlink" title="添加分享"></a>添加分享</h3><p>NexT主题支持多种方式的分享，包括 <code>Baidu Share</code> 、<code>duoshuo_share</code>、<code>needMoreShare2</code>、<code>jiathis</code>等等，这里我们使用<code>needMoreShare2</code>，在主题配置文件中修改对应的字段如下图所示，资深抓包民工表示对这里的很多软件好熟悉~，怕是要被打~</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/share.png" alt="分享"></p><p>修改后，执行 <code>hexo g -d</code>指令，效果如图：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/share_press.png" alt="分享效果图"></p><h3 id="显示当前页面的浏览进度"><a href="#显示当前页面的浏览进度" class="headerlink" title="显示当前页面的浏览进度"></a>显示当前页面的浏览进度</h3><p>在主题配置文件中 <code>ctrl+f</code> 搜索 <code>scrollpercent</code>，将 <code>false</code> 改为 <code>true</code>。如果想把 <code>top</code>按钮放在侧边栏，可以把 <code>b2t</code>字段设置为<code>true</code> ，实现效果如图所示：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/scroll.png" alt="scroll">  <img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/percent.png" alt="percent"></p><h3 id="首页博文自动卷起"><a href="#首页博文自动卷起" class="headerlink" title="首页博文自动卷起"></a>首页博文自动卷起</h3><p>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。NexT 提供三种方式来控制文章在首页的显示方式。也就是说，在首页显示文章的摘录并显示 <strong>阅读全文</strong> 按钮，可以通过以下方法：  </p><ul><li><p>在文章中使用 <code>&lt;!-- more --&gt;</code> 手动进行截断，Hexo 提供的方式</p></li><li><p>在文章的 <a href="https://hexo.io/docs/front-matter.html" target="_blank" rel="noopener">front-matter</a>中添加 <code>description</code>，并提供文章摘录</p></li><li><p>自动形成摘要，在<strong>主题配置文件</strong>中将 <code>auto_excerpt</code>设置成 <code>true</code> ，并自行设定自动截取长度（默认150）</p></li></ul><p>这里，我们使用第一种方式，实现效果如下图：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/more_press.png" alt="阅读全文"></p><h3 id="实现鼠标点击出现桃心"><a href="#实现鼠标点击出现桃心" class="headerlink" title="实现鼠标点击出现桃心"></a>实现鼠标点击出现桃心</h3><p>将 <a href="https://link.jianshu.com?t=https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js" target="_blank" rel="noopener">love.js</a>文件添加到<strong>主题目录</strong>的<code>\source\js\src</code> 下，找到 <code>\themes\next\layout\_layout.swig</code>文件， 在文件的后面， <code>&lt;/body&gt;</code>标签之前 添加以下代码：  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/love.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>实现效果为每次鼠标点击页面的时候，会出现一个彩色的桃心，如下图所示：  </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/love.png" alt="桃心"></p><h3 id="添加站内搜索"><a href="#添加站内搜索" class="headerlink" title="添加站内搜索"></a>添加站内搜索</h3><p>NexT主题支持多种搜索插件，我们这里使用 <code>hexo-generator-searchdb</code>插件，原理是在本地生成一个<code>search.xml</code>文件，搜索的时候从这个文件中根据关键字检索出相应的链接。首先执行 <code>npm install hexo-generatordb --save</code> 指令进行插件的安装，之后将下面的代码复制进<strong>站点配置文件</strong>的末尾。  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">    format: html</span><br><span class="line">    limit: <span class="number">10000</span></span><br></pre></td></tr></table></figure><p>然后将主题配置文件中的对应字段设置为 <code>true</code> 即可。</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/search.png" alt="设置搜索字段的值"></p><p>最终，会在网站的侧栏出现<code>搜索</code> 选项，搜索效果如下图所示： </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/search_press.png" alt="搜索效果图"></p><h3 id="生成站点地图"><a href="#生成站点地图" class="headerlink" title="生成站点地图"></a>生成站点地图</h3><p>站点地图是一种文件，可以通过该文件列出网站上的网页，从而可以将个人网站内容的组织架构告知 <code>baidu</code>、<code>google</code>等搜索引擎。搜索引擎的网页爬取工具会读取此文件，以便更加高效的爬取个人网站。</p><p>1、先安装对应的插件，以下两个插件对应的是 <code>baidu</code> 和 <code>google</code>  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>2、在<strong>站点配置文件</strong>中添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># auto create sitemap</span><br><span class="line">sitemap:</span><br><span class="line">path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">path: baidusitemap.xml</span><br></pre></td></tr></table></figure><p>运行指令 <code>hexo g -d</code>  ，在public目录下会发现生成了 <code>sitemap.xml</code> 和 <code>baidusitemap.xml</code> 两个文件，这表示成功了。接下来就是如何操作让百度、谷歌收录我们的博客了。</p><p>3、站点收录，由于并没有想被搜索引擎检索的需求，私下里自己先玩一玩，所以，此项，To Do….</p><h3 id="实现统计功能"><a href="#实现统计功能" class="headerlink" title="实现统计功能"></a>实现统计功能</h3><p>在Hexo的根目录下执行 <code>npm install hexo-wordcount --save</code>   指令，进行字数统计模块的安装，然后修改主题配置文件，将对应的开关打开，即 <code>false</code> 改为<code>true</code>。</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/wordcount.png" alt="wordcount"></p><p>使用 <code>sublime</code>打开文件 <code>\themes\next\layout\_macro\post.swig</code> ，<code>ctrl+f</code>搜索如下代码字段，并在后面添加<code>字</code>、<code>分钟</code>。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.wordcount') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.min2read') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终的效果图，如下： </p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/wordcount_press.png" alt="字数统计效果展示"></p><h3 id="上传本地图片"><a href="#上传本地图片" class="headerlink" title="上传本地图片"></a>上传本地图片</h3><p>在<strong>站点配置文件</strong>中将 <code>post_asset_folder</code>字段设置为 <code>true</code>，同时安装对应的插件 <code>npm install hexo-asset-image --save</code>。以后运行<code>hexo n &quot;xxxx&quot;</code>来生成md博文时，<code>/source/_posts</code>文件夹内除了<code>xxxx.md</code>文件还有一个同名的文件夹，该文件夹用于存储本地图片。在<code>xxxx.md</code>中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：<code>![你想输入的替代文字](xxxx\图片名.jpg)</code></p><h2 id="集成第三方服务"><a href="#集成第三方服务" class="headerlink" title="集成第三方服务"></a>集成第三方服务</h2><h3 id="Valine评论系统"><a href="#Valine评论系统" class="headerlink" title="Valine评论系统"></a>Valine评论系统</h3><p>针对评论系统来讲的话，多说和网易云已经倒了，畅言需要备案，Disqus，Hypercomments和LiveRe等都是国外的，不仅加载速度慢还容易被墙，找来找去，决定使用valine（2017年8月诞生的一款基于<code>LeanCloud</code>的极简风评论系统）。<code>NexT</code>主题本身就已经集成了valine，所以设置起来也比较简单。  </p><ol><li><p><strong>注册LeanCloud，获取<code>appid</code>和<code>appkey</code></strong></p><p>在<a href="https://leancloud.cn/" target="_blank" rel="noopener">官网</a>注册账号并<code>创建应用</code>，应用选择<code>开发版</code>即可，毕竟穷孩子，免费的好啊。应用名字随便起，创建完成后，在 <code>设置 &gt;&gt; 应用key</code> 中可以看到此应用的appid和appkey。</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/appkey.png" alt="appid和appkey"></p></li><li><p><strong>配置web安全域名</strong></p><p>为了数据安全，在 <code>设置 &gt;&gt; 安全中心</code>中设置web安全域名，如下图：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/web_security.png" alt="web域名安全"></p></li><li><p><strong>创建<code>Class</code>对象</strong></p><p>在 <code>存储 &gt;&gt; 数据</code>栏中，创建两个<code>Class</code>，一个名为<code>Counter</code>，用于记录统计每篇博文的阅读次数；另一名为<code>Comment</code>用于记录存储每篇博文的评论。注意，此处两个<code>Class</code>的名字是固定的，不能更改。</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/class.png" alt="创建Class"></p><p>可以手动修改 <code>Counter</code>表中<code>time</code>字段的值，也就是修改了博文的阅读次数，美滋滋~~~</p></li><li><p><strong>修改<code>主题配置文件</code></strong></p><p>搜索 <code>leancloud</code>字段，将 <code>enable</code>字段设置为 <code>true</code>，<code>app_id</code>和<code>app_key</code>填写之前获得的值，此时，就可以在页面中启用博文阅读次数统计功能。</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/valine.png" alt="valine配置文件修改"></p><p>搜索<code>valine</code>字段，将 <code>enable</code>字段设置为 <code>true</code>，<code>app_id</code>和<code>app_key</code>填写之前获得的值，此时，就可以在页面中启用博文评论及回复功能。其中的<code>notify</code>字段代表有评论时邮件提醒，<code>verify</code>字段代表开启验证码，<code>avatar</code>代表评论者的头像，<code>placeholder</code>字段代表初始评论框中显示的文字，等等。。。</p></li><li><p><strong>最终效果展示</strong></p><p>后台数据管理：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/guanli.png" alt="后台数据管理"></p><p>阅读次数统计：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/counter.png" alt="阅读次数统计"></p><p>底部评论区：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/comment.png" alt="评论区"></p></li><li><p><strong>邮件提醒功能配置</strong></p><p>至此，已经能够使用评论系统了，但它虽然支持邮件提醒（基于密码重置提醒邮件），功能却很弱，无法提示到具体文章，也无法给评论者进行有效的回复通知，通常别人留完言，怎么还会再来你的博客看你是否回复了呢？所以，这里我们引用GitHub上某位大佬的<a href="https://github.com/panjunwen/Valine-Admin" target="_blank" rel="noopener">配置</a>，它满足了：</p><ul><li>完善的邮件通知，自定义 SMTP 发件频率和内容不再受限</li><li>基于 Akismet 的垃圾评论自动标注和过滤</li><li>评论管理，避免直接操作数据库</li><li>……</li></ul><p>邮件效果如下图所示：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/mail_press.png" alt="邮件展示"></p><p>管理界面如下图：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/comment_press.png" alt="评论管理"></p></li></ol><h3 id="卜算子统计"><a href="#卜算子统计" class="headerlink" title="卜算子统计"></a>卜算子统计</h3><p>在<code>主题配置文件</code>中搜索 <code>busuanzi_count</code>，将开关打开，并做如下图修改，即可统计站点的 <code>UV</code>和<code>PV</code>：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/busuanzi.png" alt="卜算子统计"></p><p>实现效果如下图：</p><p><img src="/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/busuanzi_press.png" alt="站点统计"></p><p>第一行的 <code>Site words total count</code>很是刺眼，改！之前的leancloud留下来的历史问题。在 <code>\themes\next\layout\_partials\footer.swig</code>中第19行做如下修改：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#125;&#123;&#123; totalcount(site, '0,0.0a') &#125;&#125; 字&#123;#</span><br></pre></td></tr></table></figure><p>在<code>\themes\next\language\zh-Hans.yml</code>文件中，修改第36行，如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#修改前：</span><br><span class="line">totalcount: Site words total count</span><br><span class="line">#修改后：</span><br><span class="line">totalcount: 本站共计</span><br></pre></td></tr></table></figure><h2 id="To-DO-List"><a href="#To-DO-List" class="headerlink" title="To DO List"></a>To DO List</h2><ul><li><p>SEO优化</p></li><li><p>CND优化</p></li><li><p>静态资源压缩（github pages提供的免费空间有限）</p></li><li><p>添加动态萌宠</p></li><li><p>代码区添加<code>点击复制</code>按钮</p></li><li><p>隐私博文加密访问</p></li><li><p>设置背景及透明度</p><p>打开 <code>\themes\next\source\css\_custom\custom.styl</code>文件，添加如下代码即可：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">background</span>:<span class="built_in">url</span>(https://source.unsplash.com/random/1920x1080);    </span><br><span class="line"><span class="attribute">background-repeat</span>: repeat;    </span><br><span class="line"><span class="attribute">background-attachment</span>:fixed;    </span><br><span class="line"><span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line">//改变背景色和透明度</span><br><span class="line"><span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加网易云音乐</p></li><li><p>个性化字体设置</p></li><li><p>文章顶部添加最近更新时间</p><p>在<code>主题设置文件</code>中搜索<code>update</code>，将其设置为<code>true</code>即可。</p></li><li><p>个性设置文章间分割线</p></li><li><p>。。。。。。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;　　大二的时候看见学长搭建的个人博客，感觉好高大上的样子，想着自己啥时候不再是哪个只会喊：&lt;strong&gt;哇、牛批、666、厉害厉害&lt;/strong&gt;的傻逼选手，然后浪啊浪，突然有一天，CSP考试上考到了一个Markdown转HTML的大模拟题：&lt;br&gt;&lt;img src=&quot;/2018/09/22/GitHub-Pages-Hexo-Next博客搭建记录/CSP.png&quot; alt=&quot;计算机软件能力认证考试系统&quot;&gt;现场狂写2小时，黑箱测试最后只得20分，从此心理对MD留下了挥之不去的阴影，然后就没有了然后，此事不来了了之。大二的时候在&lt;a href=&quot;https://blog.csdn.net/spring371327&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CSDN&lt;/a&gt;上写过，但是感觉CSDN的广告是越来也严重了，上面，下面，左面，右面等等四面八方全是各种广告，于是乎，时隔三年，趁着中秋没钱出去浪啊，舍友也回家了，丧尸宿舍也搭建一个简单的个人博客吧，此文简单记录一下搭建过程。&lt;br&gt;本文使用的是 &lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github pages&lt;/a&gt; + &lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; + &lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Next &lt;/a&gt;主题。      &lt;/p&gt;
    
    </summary>
    
      <category term="技术记录" scheme="http://wangjibao.com.cn/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="博客搭建" scheme="http://wangjibao.com.cn/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="技术记录" scheme="http://wangjibao.com.cn/tags/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
